[{"id":0,"href":"/docs/example/topics/career-support/","title":"Career Support","section":"Topics","content":"Career Support This document serves as a place holder for content that will be collaboratively created at Hackathon. link to hack.md doc\nPresentation of the breakout room topic Step Exposition of examples OR individual/collective practices Discussion and summary of challenges Return of participants and organizers to the main workshop room Questions for Group What other tools have you used for this purpose? How does GitHub compare to other tools you’ve used for this purpose? What are the main challenges in using GitHub for this purpose? What are the main benefits of using GitHub over some other tool? What could be done to improve GitHub for this purpose?\n"},{"id":1,"href":"/docs/example/topics/dynamic-collaboration/","title":"Dynamic Collaboration","section":"Topics","content":"Dynamic Collaboration This document serves as a place holder for content that will be collaboratively created at Hackathon. link to hack.md doc\nPresentation of the breakout room topic Step Exposition of examples OR individual/collective practices Discussion and summary of challenges Return of participants and organizers to the main workshop room Questions for Group What other tools have you used for this purpose? How does GitHub compare to other tools you’ve used for this purpose? What are the main challenges in using GitHub for this purpose? What are the main benefits of using GitHub over some other tool? What could be done to improve GitHub for this purpose?\n"},{"id":2,"href":"/docs/example/","title":"Hackathon Schedule","section":"Docs","content":"Hackathon Schedule \n 18:30-23:00 UTC (4.5 hours) / 11:30am PT - 4:00pm PT\n   Timing UTC/PT Activity     18:30-18:45 / 11:30am-11:45am General introduction of the workshop timeline, objectives, recommended behaviour, and session organizers   18:45-19:05 / 11:45am-12:05pm Short introduction about the power of Git and Github, about the experience of session organizers, and question period   19:05-19:15 / 12:05pm-12:15pm Explanation and assignment of participants and organizers to breakout rooms   19:15-19:25 / 12:15pm-12:25pm BREAK   19:25-20:25 / 12:25pm-1:25pm Collaborate in breakout rooms (minimum 3 people per room). See breakout room details below.   20:25-20:35 / 1:25pm-1:35pm BREAK   20:35- Breakout room summary. Each group reports back in 5-10 min   /    /    /    /     Breakout room details: Choose from one of 5 breakout rooms:\n visualizing data and results career-supporting resources research documentation programming and code support dynamic collaboration  within each breakout room, we\u0026rsquo;ll cover the following areas: Step 1: Presentation of the breakout room topic Step 2: Exposition of examples OR individual/collective practices (?) Step 3: Discussion and summary of challenges; Step 4: Return of participants and organizers to the main workshop room\nwithin each breakout room, consider the following discussion questions:\n What other tools have you used for this purpose? How does GitHub compare to other tools you\u0026rsquo;ve used for this purpose? What are the main challenges in using GitHub for this purpose? What are the main benefits of using GitHub over some other tool? What could be done to improve GitHub for this purpose?  Breakout room topics (goal: building content areas for the manuscript): 1) visualizing data and results; 2) career-supporting resources; 3) research documentation; 4) programming and code support; 5) dynamic collaboration\n01h30m to 01h45m: Break (?) 01h45m to 02h15m: Summary of break-out room discussions;\nWhat questions do we want to address during the discussion?\n How often do you see GitHub being used in these ways in ecology and evolution? Do you think ecology and evolution would be improved with more usage of these tools? In what ways? What parts of ecology and evolution are beyond the scope of these tools? What parts of ecology and evolution are put at risk by these tools? maybe a weird question, but could get at concerns people have about scooping/data security and ways of dealing with this (If you work in Eco/Evo) Would you consider using GitHub for any of your current or future projects, or recommend it to your colleagues? If so, what would you most want to use it for (visualisation, documentation, etc.)?  02h15m to 02h30m: General discussion and summary; 02h30m to 02h45m: Closure with plan for the upcoming weeks + survey (?). Writing time (The extra 15 minutes can be used to adjust to the other sections)\n(End of Schedule)\n"},{"id":3,"href":"/docs/example/topics/programming-and-coding/","title":"Programming and Coding","section":"Topics","content":"Programming and Coding This document serves as a place holder for content that will be collaboratively created at Hackathon. link to hack.md doc\nPresentation of the breakout room topic Step Exposition of examples OR individual/collective practices Discussion and summary of challenges Return of participants and organizers to the main workshop room Questions for Group What other tools have you used for this purpose? How does GitHub compare to other tools you’ve used for this purpose? What are the main challenges in using GitHub for this purpose? What are the main benefits of using GitHub over some other tool? What could be done to improve GitHub for this purpose?\n"},{"id":4,"href":"/docs/example/topics/research_documentation/","title":"Research Documentation","section":"Topics","content":"Research Documentation This document serves as a place holder for content that will be collaboratively created at Hackathon. link to hack.md doc\nPresentation of the breakout room topic Step Exposition of examples OR individual/collective practices Discussion and summary of challenges Return of participants and organizers to the main workshop room Questions for Group What other tools have you used for this purpose? How does GitHub compare to other tools you’ve used for this purpose? What are the main challenges in using GitHub for this purpose? What are the main benefits of using GitHub over some other tool? What could be done to improve GitHub for this purpose?\n"},{"id":5,"href":"/docs/example/topics/tech-support/","title":"Tech Support","section":"Topics","content":"Tech Support This document serves as a place holder for content that will be collaboratively created at Hackathon. link to hack.md doc\nPresentation of the breakout room topic Step Exposition of examples OR individual/collective practices Discussion and summary of challenges Return of participants and organizers to the main workshop room Questions for Group What other tools have you used for this purpose? How does GitHub compare to other tools you’ve used for this purpose? What are the main challenges in using GitHub for this purpose? What are the main benefits of using GitHub over some other tool? What could be done to improve GitHub for this purpose?\n"},{"id":6,"href":"/docs/example/topics/visualizing-data-and-results/","title":"Visualizing Data and Results","section":"Topics","content":"Visualizing Data and Results This document serves as a place holder for content that will be collaboratively created at Hackathon. link to hack.md doc\nPresentation of the breakout room topic Step Exposition of examples OR individual/collective practices Discussion and summary of challenges Return of participants and organizers to the main workshop room Questions for Group What other tools have you used for this purpose? How does GitHub compare to other tools you’ve used for this purpose? What are the main challenges in using GitHub for this purpose? What are the main benefits of using GitHub over some other tool? What could be done to improve GitHub for this purpose?\n"},{"id":7,"href":"/posts/github-for-research-documentation/","title":"GitHub for research documentation","section":"Blog","content":"GitHub for research documentation A quick tutorial written by Emma Hudgins, originally for the Bennett Lab @ Carleton 1. Getting set up  Make a Github account Download the Github Desktop App Create an OSF account Create a Research Data Management Plan for your project  2. Using GitHub desktop  In the left pane, select Add to create a new repository Choose Create new repository and give the path to the project folder (or create a new folder). The folder can be in your Dropbox/OneDrive etc. for extra backup A Git pane should now appear in the top right of newer versions of RStudio when you\u0026rsquo;re working in the associated R Project (see 3.4 for more on Git), but you can also set a default text editor (I like Sublime)  3. Linking GitHub with OSF  Create a new OSF project (link)(image) or use a template (My lab has started following this basic template (image) add your RDMP to the RDMP section of the OSF project Add GitHub as an Add-on in your OSF profile in Settings\u0026raquo;Configure add-on accounts Link GitHub with your OSF account in the Add-ons section of the relevant project components (e.g. Analysis)  Select Import Account from Profile Select the corresponding repo for the project    4. Some reproducibility tips (large taken from the Bennett Lab manual compiled by Jaimie Vincent)   Data management and storage\n Starting any research project with an RDMP provides direction for conducting research in line with Open Science/FAIR practices. Data and code should be backed up regularly, using the “3-2-1” rule as a rule of thumb - this means having three copies of your data (your working copy and two backups) on two different formats (e.g., cloud storage and disk storage) with at least 1 off-site copy for disaster recovery. Update your RDMP as necessary to include information about where these files will be permanently stored in addition to your storage, backup, security and archiving protocols. Your code and/or analyses, interpreted data, and other outputs (e.g., figures, tables) should be continuously backed up and securely stored. Be sure to consider data privacy when making backups. Store data and code in an organized file system (for instance, using a breakdown of scripts, raw data, derived data , outputs within a large project directory) Do not alter the raw data (consider making it read-only) to have a stable separate copy    Intellectual property\n This is particularly important to discuss when the work belongs to students whose association with a particular research group may be temporary. The RDMP can help transparency around whose intellectual property this work represents. It can be useful to name a single data steward who is responsible for the maintenance of the code and data throughout its lifecycle    Metadata\n There should be adequate metadata documentation. Metadata provides information about code and data function and usage, and often takes the form of ‘README’ files in research projects. GitHub Desktop asks if you want to initialize a README file whenever you create a new repo Consider having a single readme at the minimum for the project that outlines all scripts and input data files and how they interact such that the analyses can be reproduced. At the minimum, this file should contain the project Title, Authors, Description - including of all folder subdirectories and how they relate to each other, Date, and License. GitHub allows easy association of a variety of license types with repositories - consider a license like GPL or CC-BY to ensure allowability of the reuse of your code Cryptic naming conventions in data files should be described, as well as any units and geographic transformations. If the project includes external data sources, download dates should be provided as well as any relevant filters selected. Update the metadata following any changes to the workflow    Code\n Provide software and package version information in either the metadata or in a commented header section of any script Provide annotated code with comments describing all steps taken in the analysis All figures and tables should be entirely reproducible with the code and data provided (data privacy restrictions permitting). For sensitive data, plan for appropriate anonymization and secure storage Consider using packages that guess working directories (e.g. here package for R), or using project files like .Rproj to facilitate data and code integration when the data and code are shared    Hosting\n Link the project with a platform that can provide a persistent link to the published version of the data (e.g. Zenodo link with GitHub, Dryad) in order to ensure the published results can be reproduced even as the workflow evolves (add Zenodo example)    Naming: https://help.osf.io/hc/en-us/articles/360019931113-File-naming\n   Consider adopting a standard file naming convention, i.e. using dashes or underscores to separate name components (avoiding special characters and spaces, especially) Use the most informative naming as possible within all project components (including variable names in code). Number or date scripts so that they order themselves meaningfully (i.e. by order of use or version number)  Appendix 1. Connecting to a remote server via SSH  Open terminal (Ctrl+Alt+T on Ubuntu, Command+Space on Mac to bring up Spotlight and search for Terminal, or use the Windows Start menu and look for Windows Powershell or Command Prompt) Type ssh user@hostname for the remote machine you want to connect to  EmmaH:~/$ ssh ehudgins@nature-vm04.carleton.ca  Enter your password when prompted, (be prepared to say Yes to yet another message about a fingerprint) Navigate to the directory where your script is stored (maybe you transfered it there with FileZilla?) using cd  Appendix 2. Configuring git on a remote machine   If you want to sync an existing GitHub repository, use git in the terminal (see 3.4, and see here for more info on working with git in various ways\n  To clone a GitHub repo to a remote machine, install git\n in the terminal (for Ubuntu), type  ehudgins@nature-vm04:~/$ sudo apt install git  see here for other OS instructions Configure git for your GitHub account  ehudgins@nature-vm04:~/$ git config --global user.email \u0026quot;you@example.com\u0026quot; ehudgins@nature-vm04:~/$ git config --global user.name \u0026quot;Your Name\u0026quot;   Clone using\n  ehudgins@nature-vm04:~/$ git clone https://github.com/emmajhudgins/example_github_osf  If you update the repo on your local computer, pull from the folder  ehudgins@nature-vm04:~/example_github_osf$ git pull  If you update the repo on this remote machine, commit changes and push to origin  ehudgins@nature-vm04:~/example_github_osf$ git add \u0026lt;changed file\u0026gt; ehudgins@nature-vm04:~/example_github_osf$ git commit -m \u0026quot;\u0026lt;message\u0026gt;\u0026quot; ehudgins@nature-vm04:~/example_github_osf$ git push "},{"id":8,"href":"/docs/example/topics/","title":"Topics","section":"Hackathon Schedule","content":"Overview of Topics  Career Support Dynamic Collaboration Programming and Coding Research Documentation Tech Suppport Visualizing Data and Resutls  "},{"id":9,"href":"/docs/example/hidden/","title":"Hidden","section":"Hackathon Schedule","content":"This page is hidden in menu Quondam non pater est dignior ille Eurotas Latent te facies Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\n Pater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor  Cum honorum Latona O fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer), pad.property_data_programming.sectorBrowserPpga(dataMask, 37, recycleRup)); intellectualVaporwareUser += -5 * 4; traceroute_key_upnp /= lag_optical(android.smb(thyristorTftp)); surge_host_golden = mca_compact_device(dual_dpi_opengl, 33, commerce_add_ppc); if (lun_ipv) { verticalExtranet(1, thumbnail_ttl, 3); bar_graphics_jpeg(chipset - sector_xmp_beta); }  Fronde cetera dextrae sequens pennis voce muneris Acta cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software; if (internic \u0026gt; disk) { emoticonLockCron += 37 + bps - 4; wan_ansi_honeypot.cardGigaflops = artificialStorageCgi; simplex -= downloadAccess; } var volumeHardeningAndroid = pixel + tftp + onProcessorUnmount; sector(memory(firewire + interlaced, wired)); "}]